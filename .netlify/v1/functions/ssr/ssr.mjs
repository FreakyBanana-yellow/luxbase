
				import createSSRHandler from './.netlify/build/entry.mjs';
				export default createSSRHandler({"cacheOnDemandPages":false,"notFoundContent":"<!DOCTYPE html><html lang=\"de\" class=\"scroll-smooth\"> <head><meta charset=\"utf-8\"><title>Seite nicht gefunden – Luxbase</title><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\"><meta name=\"theme-color\" content=\"#0d0d0d\"><meta name=\"apple-mobile-web-app-capable\" content=\"yes\"><meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\"><!-- Supabase Keys via Meta-Tag --><meta id=\"supabase-config\" data-url=\"https://zpzigwfjfhogkzuvijzm.supabase.co\" data-key=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inpwemlnd2ZqZmhvZ2t6dXZpanptIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA5MjcwNDcsImV4cCI6MjA2NjUwMzA0N30.jMDAFkPhKmLXtLYerLd9z93tugNvw14L4oZvSNkSD2o\"><!-- Fonts (optional) --><link href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Playfair+Display:wght@400;700&display=swap\" rel=\"stylesheet\"><link rel=\"stylesheet\" href=\"/_astro/aktivität._wwie63p.css\">\n<link rel=\"stylesheet\" href=\"/_astro/models.BDPSo2u3.css\"><script type=\"module\">document.write(new Date().getFullYear());\n</script></head> <body class=\"min-h-screen flex flex-col bg-luxblack text-white font-sans\"> <!-- HEADER --> <header class=\"w-full flex items-center justify-between gap-2 p-4 bg-black border-b border-luxgray sticky top-0 z-50\"> <a href=\"/\" class=\"text-luxgold font-serif text-xl leading-none\">LUXBASE</a> <nav class=\"flex items-center gap-3\"> <!-- EINZIGER Button --> <button id=\"navLogin\" class=\"h-11 px-5 border border-luxgold text-luxgold rounded hover:bg-luxgold hover:text-black transition\">\nLogin\n</button> </nav> </header> <!-- LOGIN MODAL --> <div id=\"loginModal\" class=\"fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center z-50 hidden\"> <div class=\"bg-zinc-900 border border-luxgold p-6 rounded-2xl w-[92vw] max-w-sm relative text-white shadow-xl\"> <button id=\"closeLogin\" class=\"absolute top-3 right-4 text-white text-2xl leading-none hover:text-luxgold\" aria-label=\"Login schließen\">&times;</button> <h2 class=\"text-xl font-serif font-bold text-luxgold text-center mb-5\">Login</h2> <form id=\"popupLoginForm\" class=\"space-y-3\"> <input type=\"email\" name=\"email\" placeholder=\"E-Mail\" required class=\"w-full h-12 px-4 bg-black border border-zinc-600 rounded-xl\"> <input type=\"password\" name=\"password\" placeholder=\"Passwort\" required class=\"w-full h-12 px-4 bg-black border border-zinc-600 rounded-xl\"> <button type=\"submit\" class=\"w-full h-12 bg-luxgold text-black font-bold rounded-xl hover:bg-yellow-400 transition\">\nEinloggen\n</button> </form> <p id=\"popupLoginMsg\" class=\"text-sm text-center text-red-400 mt-2 min-h-[1.25rem]\"></p> <p class=\"text-center text-sm mt-4 text-gray-400\">\nNoch kein Account? <a href=\"/register\" class=\"text-luxgold hover:underline\">Jetzt registrieren</a> </p> </div> </div> <!-- MAIN CONTENT --> <main class=\"flex-1 pb-20\">  <section class=\"text-center py-32\"> <h1 class=\"text-6xl font-bold text-luxgold mb-6\">404</h1> <p class=\"text-lg text-white/80 mb-6\">Die Seite konnte nicht gefunden werden.</p> <a href=\"/\" class=\"px-6 py-2 bg-luxgold text-black font-bold rounded hover:bg-yellow-400 transition\">Zurück zur Startseite</a> </section>  </main> <!-- Mobile Bottom Bar --> <nav class=\"fixed bottom-0 inset-x-0 bg-black/90 backdrop-blur border-t border-luxgray z-50\"> <div class=\"grid grid-cols-3 text-center text-sm\"> <a href=\"/\" class=\"py-3 flex flex-col items-center gap-1\"> <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"h-6 w-6 text-luxgold\"><path d=\"M12 3l9 8h-3v9h-5v-6H11v6H6v-9H3l9-8z\"></path></svg> <span>Home</span> </a> <!-- nutzt dieselbe Logik wie der Header-Button --> <button id=\"openLoginBottom\" class=\"py-3 flex flex-col items-center gap-1\"> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 text-luxgold\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M10 17l5-5-5-5v10z\"></path></svg> <span>Login</span> </button> <!-- reiner Link auf generisches Dashboard, falls jemand manuell klickt --> <a href=\"/dashboard\" class=\"py-3 flex flex-col items-center gap-1\"> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 text-luxgold\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z\"></path></svg> <span>Dashboard</span> </a> </div> </nav> <footer class=\"text-center text-sm text-luxgold/70 py-8 border-t border-luxgray hidden md:block\">\n©  Luxbase – Automation with Style.\n</footer> <!-- SCRIPT: Supabase Auth + „ein Button“ Logik --> <script type=\"module\">\n      import { createClient } from \"https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm\";\n\n      const meta = document.getElementById(\"supabase-config\");\n      const supabase = createClient(meta.dataset.url, meta.dataset.key);\n\n      const modal = document.getElementById(\"loginModal\");\n      const closeBtn = document.getElementById(\"closeLogin\");\n      const msg = document.getElementById(\"popupLoginMsg\");\n      const form = document.getElementById(\"popupLoginForm\");\n      const btnHeader = document.getElementById(\"navLogin\");\n      const btnBottom = document.getElementById(\"openLoginBottom\");\n\n      const openLogin = () => modal.classList.remove(\"hidden\");\n      const closeLogin = () => modal.classList.add(\"hidden\");\n      closeBtn?.addEventListener(\"click\", closeLogin);\n\n      // Entscheidet: Modal öffnen (nicht eingeloggt) ODER ins richtige Dashboard routen (eingeloggt)\n      async function smartLoginOrRoute() {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (!user) { openLogin(); return; }\n\n        // Mitgliedschaft / Account-Typ prüfen\n        const [{ data: m }, { data: p }] = await Promise.all([\n          supabase.from(\"agency_member\").select(\"agency_id\").eq(\"user_id\", user.id).limit(1),\n          supabase.from(\"user_profile\").select(\"account_type\").eq(\"user_id\", user.id).maybeSingle(),\n        ]);\n\n        const isAgency =\n          (m && m.length > 0) ||\n          (String(p?.account_type || user.user_metadata?.account_type || \"\").toLowerCase() === \"agency\");\n\n        location.href = isAgency ? \"/dashboard-agentur\" : \"/dashboard-model\";\n      }\n\n      btnHeader?.addEventListener(\"click\", smartLoginOrRoute);\n      btnBottom?.addEventListener(\"click\", smartLoginOrRoute);\n\n      // Button-Text anpassen, wenn bereits eingeloggt\n      (async () => {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (user) {\n          const btns = [btnHeader, btnBottom].filter(Boolean);\n          btns.forEach(b => (b.textContent = \"Zum Dashboard\"));\n        }\n      })();\n\n      // Login im Modal: nach Erfolg optional creator_config cachen, dann weiterleiten\n      form?.addEventListener(\"submit\", async (e) => {\n        e.preventDefault();\n        msg.textContent = \"\";\n\n        const fd = new FormData(form);\n        const email = fd.get(\"email\");\n        const password = fd.get(\"password\");\n\n        const { data, error } = await supabase.auth.signInWithPassword({ email, password });\n        if (error) { msg.textContent = error.message || \"Login fehlgeschlagen\"; return; }\n\n        try {\n          const user = data.user;\n          // optional: creator_config für Dashboard cachen\n          const { data: cfg } = await supabase\n            .from(\"creator_config\")\n            .select(\"creator_id, creator_name, email, rolle, has_vipbot, has_vault, bot_paket, show_selfie_gate, telegram_id, preis, vip_dauer, gruppe_link, welcome_text\")\n            .eq(\"creator_id\", user.id)\n            .maybeSingle();\n\n          const config = cfg || {\n            creator_id: user.id,\n            creator_name: user.email,\n            email: user.email,\n            rolle: \"creator\",\n            has_vipbot: false,\n            has_vault: false,\n            bot_paket: \"basic\",\n            show_selfie_gate: false\n          };\n          sessionStorage.setItem(\"luxbase_config\", JSON.stringify(config));\n        } catch (_) {\n          // config ist optional; Fehler dabei ignorieren\n        }\n\n        // danach immer ins richtige Dashboard routen\n        await smartLoginOrRoute();\n      });\n    </script> </body> </html>"});
				export const config = {
					includedFiles: ['**/*'],
					name: 'Astro SSR',
					nodeBundler: 'none',
					generator: '@astrojs/netlify@5.5.4',
					path: '/*',
					preferStatic: true,
				};
			