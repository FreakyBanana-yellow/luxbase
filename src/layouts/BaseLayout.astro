---
import "../styles/global.css";
---
<html lang="de" class="scroll-smooth">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Luxbase</title>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Playfair+Display:wght@400;700&display=swap" rel="stylesheet" />
    <meta name="theme-color" content="#0d0d0d" />
    <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
    <script>
      window.supabase = supabase.createClient(
        import.meta.env.PUBLIC_SUPABASE_URL,
        import.meta.env.PUBLIC_SUPABASE_ANON_KEY
      );
    </script>
  </head>
  <body class="min-h-screen flex flex-col bg-luxblack text-white font-sans">
    <header class="sticky top-0 z-50 flex items-center justify-between px-6 py-4 bg-black/70 backdrop-blur shadow-md">
      <h1 class="text-2xl md:text-3xl font-serif font-bold text-luxgold">Luxbase</h1>
      <button id="openLogin" class="text-sm px-4 py-2 border border-luxgold text-luxgold rounded hover:bg-luxgold hover:text-luxblack transition">Login</button>
    </header>

    <!-- Login/Register Modal -->
    <!-- ...[dein kompletter Modal-Code bleibt unverändert]... -->

    <main class="flex-1"><slot /></main>

    <footer class="text-center text-sm text-luxgold/70 py-8 border-t border-luxgray">© {new Date().getFullYear()} Luxbase – Automation with Style.</footer>

    <script>
      const $ = (id) => document.getElementById(id);
      $('openLogin').onclick = () => { $('loginModal').classList.remove('hidden'); show('loginBox'); };
      $('closeLogin').onclick = () => $('loginModal').classList.add('hidden');
      $('loginModal').onclick = (e) => { if (e.target.id === 'loginModal') $('loginModal').classList.add('hidden'); };

      function show(id) {
        ['loginBox','registerBox','resetBox'].forEach(b => $(b).classList.add('hidden'));
        $(id).classList.remove('hidden');
      }
      $('linkToRegister').onclick = () => show('registerBox');
      $('linkToLogin').onclick = () => show('loginBox');
      $('linkToReset').onclick = () => show('resetBox');
      $('backToLogin').onclick = () => show('loginBox');

      const togglePw = (id) => {
        const i = $(id);
        i.type = i.type === 'password' ? 'text' : 'password';
      };
      $('toggleSignupPw').onclick = () => togglePw('signupPassword');
      $('toggleLoginPw').onclick = () => togglePw('loginPassword');

      const hints = $('pwHints');
      $('signupPassword').addEventListener('input', (e) => {
        const v = e.target.value;
        const rules = [
          { t: 'Mindestens 8 Zeichen', ok: v.length >= 8 },
          { t: 'Mind. ein Großbuchstabe', ok: /[A-Z]/.test(v) },
          { t: 'Mind. eine Zahl', ok: /\d/.test(v) },
          { t: 'Mind. ein Sonderzeichen', ok: /[^A-Za-z0-9]/.test(v) }
        ];
        hints.innerHTML = rules.map(r => `<p class="${r.ok ? 'text-green-400' : 'text-gray-400'}">• ${r.t}</p>`).join('');
      });

      $('btnLogin').onclick = async () => {
        const email = $('loginEmail').value.trim();
        const password = $('loginPassword').value;
        $('loginMsg').textContent = '';
        const { error } = await supabase.auth.signInWithPassword({ email, password });
        if (error) $('loginMsg').textContent = error.message;
        else location.href = '/dashboard';
      };

      $('btnSignup').onclick = async () => {
        const name = $('signupName').value.trim();
        const email = $('signupEmail').value.trim();
        const role = $('signupRole').value;
        const pw = $('signupPassword').value;
        const confirm = $('signupConfirm').value;
        $('signupMsg').textContent = '';

        if (pw !== confirm) {
          $('signupMsg').textContent = 'Passwörter stimmen nicht überein';
          return;
        }

        const { data, error } = await supabase.auth.signUp({ email, password: pw });
        if (error) {
          $('signupMsg').textContent = error.message;
          return;
        }

        const insertResult = await supabase.from('profiles').insert({ id: data.user.id, name, role });
        if (insertResult.error) {
          $('signupMsg').textContent = 'Registrierung erfolgreich, aber Profil konnte nicht gespeichert werden.';
          return;
        }

        $('signupMsg').textContent = 'Registrierung erfolgreich – Weiterleitung...';
        setTimeout(() => location.href = '/dashboard', 1000);
      };

      $('btnReset').onclick = async () => {
        const email = $('resetEmail').value.trim();
        $('resetMsg').textContent = '';
        const { error } = await supabase.auth.resetPasswordForEmail(email);
        $('resetMsg').textContent = error ? error.message : 'E-Mail zum Zurücksetzen gesendet.';
      };
    </script>
  </body>
</html>
