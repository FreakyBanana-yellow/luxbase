---
import "../styles/global.css";
const { title = "Luxbase" } = Astro.props;
export const prerender = false;
---

<html lang="de" class="scroll-smooth">
  <head>
    <meta charset="utf-8" />
    <title>{title}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
    <meta name="theme-color" content="#0d0d0d" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

    <!-- Supabase Keys via Meta-Tag -->
    <meta id="supabase-config"
          data-url={`${import.meta.env.PUBLIC_SUPABASE_URL}`}
          data-key={`${import.meta.env.PUBLIC_SUPABASE_ANON_KEY}`} />

    <!-- Fonts (optional) -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Playfair+Display:wght@400;700&display=swap" rel="stylesheet" />
  </head>

  <body class="min-h-screen flex flex-col bg-luxblack text-white font-sans">
    <!-- HEADER -->
    <header class="w-full flex items-center justify-between gap-2 p-4 bg-black border-b border-luxgray sticky top-0 z-50">
      <a href="/" class="text-luxgold font-serif text-xl leading-none">LUXBASE</a>

      <nav class="flex items-center gap-3">
        <!-- EINZIGER Button -->
        <button
          id="navLogin"
          class="h-11 px-5 border border-luxgold text-luxgold rounded hover:bg-luxgold hover:text-black transition">
          Login
        </button>
      </nav>
    </header>

    <!-- LOGIN MODAL -->
    <div id="loginModal" class="fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center z-50 hidden">
      <div class="bg-zinc-900 border border-luxgold p-6 rounded-2xl w-[92vw] max-w-sm relative text-white shadow-xl">
        <button id="closeLogin" class="absolute top-3 right-4 text-white text-2xl leading-none hover:text-luxgold" aria-label="Login schließen">&times;</button>
        <h2 class="text-xl font-serif font-bold text-luxgold text-center mb-5">Login</h2>

        <form id="popupLoginForm" class="space-y-3">
          <input type="email" name="email" placeholder="E-Mail" required class="w-full h-12 px-4 bg-black border border-zinc-600 rounded-xl" />
          <input type="password" name="password" placeholder="Passwort" required class="w-full h-12 px-4 bg-black border border-zinc-600 rounded-xl" />
          <button type="submit" class="w-full h-12 bg-luxgold text-black font-bold rounded-xl hover:bg-yellow-400 transition">
            Einloggen
          </button>
        </form>

        <p id="popupLoginMsg" class="text-sm text-center text-red-400 mt-2 min-h-[1.25rem]"></p>
        <p class="text-center text-sm mt-4 text-gray-400">
          Noch kein Account? <a href="/register" class="text-luxgold hover:underline">Jetzt registrieren</a>
        </p>
      </div>
    </div>

    <!-- MAIN CONTENT -->
    <main class="flex-1 pb-20">
      <slot />
    </main>

    <!-- Mobile Bottom Bar -->
    <nav class="fixed bottom-0 inset-x-0 bg-black/90 backdrop-blur border-t border-luxgray z-50">
      <div class="grid grid-cols-3 text-center text-sm">
        <a href="/" class="py-3 flex flex-col items-center gap-1">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-6 w-6 text-luxgold"><path d="M12 3l9 8h-3v9h-5v-6H11v6H6v-9H3l9-8z"/></svg>
          <span>Home</span>
        </a>

        <!-- nutzt dieselbe Logik wie der Header-Button -->
        <button id="openLoginBottom" class="py-3 flex flex-col items-center gap-1">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-luxgold" viewBox="0 0 24 24" fill="currentColor"><path d="M10 17l5-5-5-5v10z"/></svg>
          <span>Login</span>
        </button>

        <!-- reiner Link auf generisches Dashboard, falls jemand manuell klickt -->
        <a href="/dashboard" class="py-3 flex flex-col items-center gap-1">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-luxgold" viewBox="0 0 24 24" fill="currentColor"><path d="M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z"/></svg>
          <span>Dashboard</span>
        </a>
      </div>
    </nav>

    <footer class="text-center text-sm text-luxgold/70 py-8 border-t border-luxgray hidden md:block">
      © <script>document.write(new Date().getFullYear())</script> Luxbase – Automation with Style.
    </footer>

    <!-- SCRIPT: Supabase Auth + „ein Button“ Logik -->
    <script type="module">
  import { createClient } from "https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";
  const supabase = createClient(import.meta.env.PUBLIC_SUPABASE_URL, import.meta.env.PUBLIC_SUPABASE_ANON_KEY);

  // UI refs
  const openBtn = document.getElementById("openLogin");
  const openBtnBottom = document.getElementById("openLoginBottom");
  const closeBtn = document.getElementById("closeLogin");
  const modal = document.getElementById("loginModal");
  const form = document.getElementById("popupLoginForm");
  const msg = document.getElementById("popupLoginMsg");
  const accountMenu = document.getElementById("accountMenu");
  const accountBtn = document.getElementById("accountBtn");
  const accountDropdown = document.getElementById("accountDropdown");
  const usernameEl = document.getElementById("username");
  const logoutBtn = document.getElementById("logoutBtn");

  const openLogin = () => modal?.classList.remove("hidden");
  const closeLogin = () => modal?.classList.add("hidden");

  openBtn?.addEventListener("click", openLogin);
  openBtnBottom?.addEventListener("click", openLogin);
  closeBtn?.addEventListener("click", closeLogin);

  async function detectIsAgency(userId, userMeta) {
    // 1) membership?
    const { data: m } = await supabase
      .from("agency_member")
      .select("agency_id")
      .eq("user_id", userId)
      .limit(1);

    if (m && m.length > 0) return true;

    // 2) user_profile.account_type?
    const { data: p } = await supabase
      .from("user_profile")
      .select("account_type")
      .eq("user_id", userId)
      .maybeSingle();

    const metaType = String(userMeta?.account_type || "").toLowerCase();
    const profType = String(p?.account_type || "").toLowerCase();

    return metaType === "agency" || profType === "agency";
  }

  // LOGIN + Redirect zur Profilseite mit "next"
  form?.addEventListener("submit", async (e) => {
    e.preventDefault();
    msg.textContent = "";
    const fd = new FormData(form);
    const email = fd.get("email");
    const password = fd.get("password");

    const { data, error } = await supabase.auth.signInWithPassword({ email, password });
    if (error) { msg.textContent = error.message || "Login fehlgeschlagen"; return; }

    const user = data.user;
    const isAgency = await detectIsAgency(user.id, user.user_metadata);
    // Zielpfad je Rolle
    const nextPath = isAgency ? "/agency" : "/dashboard-model";

    // optional: kleine Config im SessionStorage (kannst du lassen oder entfernen)
    sessionStorage.setItem("luxbase_role", isAgency ? "agency" : "model");

    // -> erst auf Profilseite, dann weiter
    window.location.href = `/app/profile?next=${encodeURIComponent(nextPath)}`;
  });

  // Wenn bereits eingeloggt → Account-Menü zeigen
  (async () => {
    const { data: { user } } = await supabase.auth.getUser();
    if (user) {
      document.getElementById("openLogin")?.classList.add("hidden");
      document.getElementById("openLoginBottom")?.classList.add("hidden");
      accountMenu?.classList.remove("hidden");
      usernameEl.textContent = user.email || "Account";
      accountBtn?.addEventListener("click", () => accountDropdown.classList.toggle("hidden"));
      logoutBtn?.addEventListener("click", async () => {
        await supabase.auth.signOut();
        sessionStorage.clear();
        location.href = "/";
      });
    }
  })();
</script>
  </body>
</html>
