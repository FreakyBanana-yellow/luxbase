---
import "../styles/global.css";

/* Titel als Prop, Fallback ¬ªLuxbase¬´ */
const { title = "Luxbase" } = Astro.props;

/* Build‚ÄëTime‚ÄëVariablen */
const SUPABASE_URL = import.meta.env.PUBLIC_SUPABASE_URL;
const SUPABASE_KEY = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;

if (!SUPABASE_URL || !SUPABASE_KEY) {
  throw new Error("‚ùå PUBLIC_SUPABASE_URL oder _ANON_KEY fehlt ‚Äì pr√ºf .env / Netlify!");
}
---

<html lang="de" class="scroll-smooth">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Playfair+Display:wght@400;700&display=swap" rel="stylesheet" />
    <meta name="theme-color" content="#0d0d0d" />
  </head>
  <body class="min-h-screen flex flex-col bg-luxblack text-white font-sans">
    <!-- ============ HEADER / NAV ============ -->
    <header class="bg-black/80 backdrop-blur border-b border-luxgray p-4 sticky top-0 z-50 flex flex-wrap items-center justify-between">
      <!-- Logo -->
      <a href="/" class="text-luxgold font-serif font-bold text-xl">LUXBASE</a>

      <!-- Navigation Links -->
      <nav class="flex gap-6 text-sm font-medium mx-auto">
        <a href="/dashboard" class="hover:text-luxgold transition">Dashboard</a>
        <a href="/preise" class="hover:text-luxgold transition">Pakete & Preise</a>
        <a href="/kontakt" class="hover:text-luxgold transition">Kontakt</a>
      </nav>

      <!-- Auth Buttons -->
      <div class="flex gap-3">
        <button id="openLogin" class="px-5 py-2 border border-luxgold text-luxgold rounded hover:bg-luxgold hover:text-black transition hidden">Login</button>
        <button id="logoutBtn" class="px-5 py-2 border border-luxgold text-luxgold rounded hover:bg-luxgold hover:text-black transition hidden">Abmelden</button>
      </div>
    </header>

    <!-- ============ LOGIN DROPDOWN ============ -->
    <div id="loginDropdown" class="fixed inset-0 flex items-center justify-center bg-black/70 backdrop-blur-sm hidden z-50">
      <div class="bg-zinc-900 border border-luxgold p-6 rounded-xl w-80 relative">
        <button id="closeDropdown" class="absolute top-2 right-2 text-xl">&times;</button>
        <h2 class="text-xl font-serif text-luxgold text-center mb-4">Login</h2>

        <input id="ddEmail" type="email" placeholder="E‚ÄëMail" class="w-full px-3 py-2 mb-3 rounded bg-black border border-gray-600" />
        <div class="relative mb-3">
          <input id="ddPass" type="password" placeholder="Passwort" class="w-full px-3 py-2 pr-10 rounded bg-black border border-gray-600" />
          <button id="ddToggle" type="button" class="absolute right-2 top-1.5 text-sm text-luxgold">üëÅ</button>
        </div>
        <button id="ddSubmit" class="w-full bg-luxgold text-luxblack font-semibold py-2 rounded hover:bg-yellow-400 transition">Einloggen</button>
        <p id="ddMsg" class="text-red-400 text-center text-xs mt-2 min-h-[1.25rem]"></p>
      </div>
    </div>

    <!-- ============ MAIN CONTENT ============ -->
    <main class="flex-1">
      <slot />
    </main>

    <!-- ============ FOOTER ============ -->
    <footer class="text-center text-sm text-luxgold/70 py-8 border-t border-luxgray">
      ¬© <script>document.write(new Date().getFullYear())</script> Luxbase ‚Äì Automation with Style.
    </footer>

    <!-- ============ CLIENT‚ÄëSIDE SCRIPTS ============ -->
    <script type="module">
      import { createClient } from "https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";
      const supabase = createClient("${SUPABASE_URL}", "${SUPABASE_KEY}");
      window.supabase = supabase;

      // Auth‚ÄëState pr√ºfen ‚Üí Buttons umschalten
      const loginBtn   = document.getElementById("openLogin");
      const logoutBtn  = document.getElementById("logoutBtn");
      const dropdown   = document.getElementById("loginDropdown");
      const closeDrop  = document.getElementById("closeDropdown");

      async function toggleButtons () {
        const { data: { user } } = await supabase.auth.getUser();
        if (user) {
          loginBtn?.classList.add("hidden");
          logoutBtn?.classList.remove("hidden");
        } else {
          logoutBtn?.classList.add("hidden");
          loginBtn?.classList.remove("hidden");
        }
      }
      toggleButtons();

      // ---------- Login Dropdown ----------
      function showDropdown() { dropdown.classList.remove("hidden"); }
      function hideDropdown() { dropdown.classList.add("hidden"); }

      loginBtn?.addEventListener("click", e => { e.stopPropagation(); showDropdown(); });
      closeDrop?.addEventListener("click", hideDropdown);
      document.addEventListener("click", e => { if (!dropdown.contains(e.target)) hideDropdown(); });

      document.getElementById("ddToggle")?.addEventListener("click", () => {
        const f = document.getElementById("ddPass");
        f.type = f.type === "password" ? "text" : "password";
      });

      document.getElementById("ddSubmit")?.addEventListener("click", async () => {
        const email    = document.getElementById("ddEmail").value.trim();
        const password = document.getElementById("ddPass").value.trim();
        const msgEl    = document.getElementById("ddMsg");
        msgEl.textContent = "";
        const { error } = await supabase.auth.signInWithPassword({ email, password });
        if (error) {
          msgEl.textContent = error.message;
        } else {
          hideDropdown();
          toggleButtons();
          location.href = "/dashboard";
        }
      });

      // ---------- Logout ----------
      logoutBtn?.addEventListener("click", async () => {
        await supabase.auth.signOut();
        toggleButtons();
        location.href = "/";
      });
    </script>
  </body>
</html>
