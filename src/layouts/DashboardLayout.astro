---
import Sidebar from "../components/Sidebar.astro";
const role = "creator";
const name = "Creator";
---

<html lang="de">
  <head>
    <title>{Astro.props.title || "Luxbase Dashboard"}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta charset="utf-8" />
    <meta name="theme-color" content="#0d0d0d" />
    <meta id="supabase-config"
      data-url={`${import.meta.env.PUBLIC_SUPABASE_URL}`}
      data-key={`${import.meta.env.PUBLIC_SUPABASE_ANON_KEY}`} />
  </head>

  <body class="bg-luxblack text-white font-sans">
    <!-- HEADER -->
    <header class="w-full flex justify-between items-center p-4 bg-black border-b border-luxgray sticky top-0 z-50">
      <a href="/dashboard" class="text-luxgold font-serif text-xl">LUXBASE</a>
      <nav class="flex items-center gap-4">
        <button id="openLogin" class="px-5 py-2 border border-luxgold text-luxgold rounded hover:bg-luxgold hover:text-black transition hidden">
          Login
        </button>
        <div id="accountMenu" class="relative hidden">
          <button id="accountBtn" class="px-5 py-2 border border-luxgold text-luxgold rounded hover:bg-luxgold hover:text-black transition">
            üë§ <span id="username">Account</span>
          </button>
          <div class="absolute right-0 mt-2 w-48 bg-black border border-luxgray rounded shadow-xl text-sm hidden" id="accountDropdown">
            <a href="/dashboard" class="block px-4 py-2 hover:bg-luxgray/30">Dashboard</a>
            <button id="logoutBtn" class="w-full text-left px-4 py-2 hover:bg-red-900/40 text-red-400">Abmelden</button>
          </div>
        </div>
      </nav>
    </header>

    <!-- BODY -->
    <div class="flex min-h-screen">
      <Sidebar role={role} />
      <main class="flex-1 p-6">
        <slot name="header" />
        <h1 class="text-3xl font-bold text-luxgold mb-8" id="welcomeHeadline">
          Willkommen zur√ºck, {name}! üëã
        </h1>
        <slot />
      </main>
    </div>

    <!-- CLIENTSIDE LOGIC -->
    <script type="module">
  import * as supabase_js from "https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";

  (async () => {
    const meta = document.getElementById("supabase-config");
    const supabase = supabase_js.createClient(meta.dataset.url, meta.dataset.key);

    const openBtn = document.getElementById("openLogin");
    const accountMenu = document.getElementById("accountMenu");
    const accountBtn = document.getElementById("accountBtn");
    const accountDropdown = document.getElementById("accountDropdown");
    const usernameEl = document.getElementById("username");
    const logoutBtn = document.getElementById("logoutBtn");

    const welcomeHeadline = document.getElementById("welcomeHeadline");
    const root = document.getElementById("dashboardRoot");

    const lux = JSON.parse(sessionStorage.getItem("luxbase_config") || "{}");
    console.log("LUX-KONFIGURATION:", lux); // Debug-Hilfe

    // üîê Kein Creator eingeloggt?
    if (!lux?.creator_id) {
      root.innerHTML = `
        <div class="text-red-400 text-center">
          ‚ùå Nicht eingeloggt oder keine g√ºltige Konfiguration gefunden.
        </div>`;
      return;
    }

    // üß† Fallback-Name bestimmen
    const fallbackName = lux.role === "agentur" ? "deine Agentur" : "dein Creator-Profil";
    const anzeigeName = lux.creator_name?.trim() || fallbackName;

    if (welcomeHeadline) {
      welcomeHeadline.textContent = `Willkommen zur√ºck, ${anzeigeName}! üëã`;
    }

    // ü§ñ VIP-Bot pr√ºfen
    if (!lux?.has_vipbot && root) {
      root.innerHTML += `
        <p class="text-center text-gray-400 mt-6">
          Der VIP‚ÄëBot ist f√ºr deinen Account nicht aktiviert.
        </p>`;
    }

    // üîê Login-Status pr√ºfen
    const { data: { user } } = await supabase.auth.getUser();

    if (user) {
      openBtn?.classList.add("hidden");
      accountMenu?.classList.remove("hidden");
      usernameEl.textContent = lux?.creator_name || "Account";

      accountBtn?.addEventListener("click", () => {
        accountDropdown.classList.toggle("hidden");
      });

      logoutBtn?.addEventListener("click", async () => {
        await supabase.auth.signOut();
        sessionStorage.clear();
        location.href = "/";
      });
    } else {
      openBtn?.classList.remove("hidden");
      accountMenu?.classList.add("hidden");
    }
  })();
</script>

  </body>
</html>
