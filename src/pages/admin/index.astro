---
import AdminLayout from "../layouts/AdminLayout.astro";
---

<AdminLayout title="Admin-Panel">
  <section class="max-w-7xl mx-auto px-4 py-12">
    <h1 class="text-3xl font-bold text-luxgold mb-8">📋 Creator Übersicht</h1>
    <div id="adminTable" class="overflow-x-auto text-sm text-white">Lade Daten …</div>
  </section>

  <script type="module">
    import * as supabase_js from "https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";

    const meta = document.getElementById("supabase-config");
    const supabase = supabase_js.createClient(meta.dataset.url, meta.dataset.key);
    const table = document.getElementById("adminTable");

    const { data: { user } } = await supabase.auth.getUser();

    const { data: admin } = await supabase
      .from("creator_config")
      .select("rolle")
      .eq("creator_id", user.id)
      .single();

    if (!admin || admin.rolle !== "admin") {
      table.innerHTML = "<p class='text-red-400'>❌ Kein Adminzugriff.</p>";
      throw new Error("Nicht berechtigt");
    }

    const { data: creators, error } = await supabase
      .from("creator_config")
      .select("creator_id, creator_name, email, rolle, bot_paket, has_vipbot, has_vault, updated_at")
      .order("updated_at", { ascending: false });

    if (error) {
      table.innerHTML = "<p class='text-red-400'>❌ Fehler beim Laden.</p>";
      return;
    }

    const rows = creators.map(c => `
      <tr class="border-b border-zinc-800">
        <td class="px-4 py-2">${c.creator_name || "–"}</td>
        <td class="px-4 py-2">${c.email}</td>
        <td class="px-4 py-2">${c.rolle}</td>
        <td class="px-4 py-2">${c.bot_paket || "–"}</td>
        <td class="px-4 py-2 text-center">
          <input type="checkbox" data-id="${c.creator_id}" data-field="has_vipbot" ${c.has_vipbot ? "checked" : ""} class="toggle">
        </td>
        <td class="px-4 py-2 text-center">
          <input type="checkbox" data-id="${c.creator_id}" data-field="has_vault" ${c.has_vault ? "checked" : ""} class="toggle">
        </td>
        <td class="px-4 py-2 text-xs">${new Date(c.updated_at).toLocaleString("de-DE")}</td>
        <td class="px-4 py-2">
          <button class="text-luxgold hover:underline" onclick="window.location='mailto:${c.email}'">✉️</button>
        </td>
        <td class="px-4 py-2">
          <button class="text-red-500 hover:underline" onclick="kickUser('${c.creator_id}')">🗑️</button>
        </td>
      </tr>
    `).join("");

    table.innerHTML = `
      <table class="min-w-full border border-zinc-700 text-left">
        <thead class="bg-zinc-900 text-luxgold uppercase text-xs">
          <tr>
            <th class="px-4 py-2">Name</th>
            <th class="px-4 py-2">E-Mail</th>
            <th class="px-4 py-2">Rolle</th>
            <th class="px-4 py-2">Paket</th>
            <th class="px-4 py-2 text-center">VIP-Bot</th>
            <th class="px-4 py-2 text-center">Vault</th>
            <th class="px-4 py-2">Letzte Aktivität</th>
            <th class="px-4 py-2">Mail</th>
            <th class="px-4 py-2">Kick</th>
          </tr>
        </thead>
        <tbody>${rows}</tbody>
      </table>
    `;

    // Live-Toggle für Checkboxen
    document.querySelectorAll(".toggle").forEach(input => {
      input.addEventListener("change", async () => {
        const creator_id = input.dataset.id;
        const field = input.dataset.field;
        const value = input.checked;

        await supabase
          .from("creator_config")
          .update({ [field]: value })
          .eq("creator_id", creator_id);
      });
    });

    // Kick-Funktion
    window.kickUser = async (id) => {
      const confirmKick = confirm("Willst du diesen Nutzer wirklich deaktivieren?");
      if (!confirmKick) return;

      await supabase
        .from("creator_config")
        .update({ has_vipbot: false, has_vault: false })
        .eq("creator_id", id);

      alert("✅ Nutzer deaktiviert.");
      location.reload();
    };
  </script>
</AdminLayout>
