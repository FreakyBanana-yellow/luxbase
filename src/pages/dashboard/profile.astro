---
import DashboardLayout from '@/layouts/DashboardLayout.astro'
import { getProfileFromCookies } from '@/lib/profileServer'
import { entitlementsFromProfile, type Feature } from '@/lib/entitlements'

const { user, profile } = await getProfileFromCookies(Astro.cookies)
const entitlements = entitlementsFromProfile(profile)
const name = profile?.creator_name || 'Creator'

// Karten-Definition je Feature
type Card = { title: string; desc: string; href: string; feature: Feature; cta?: string }

const cards: Card[] = [
  {
    title: 'VIP Bot â€“ Dashboard',
    desc: 'Performance & Einnahmen deines Bots auf einen Blick.',
    href: '/vipbot',
    feature: 'vipbot_dashboard',
    cta: 'Ã–ffnen'
  },
  {
    title: 'VIP Bot â€“ Einstellungen',
    desc: 'Antwortlogik, Persona & Limits konfigurieren.',
    href: '/dashboard/vipbot-einstellungen', // deine Route
    feature: 'vipbot_settings',
    cta: 'Bearbeiten'
  },
  {
    title: 'Vault',
    desc: 'Dein sicherer Content-Speicher.',
    href: '/vault',
    feature: 'vault',
    cta: 'Ã–ffnen'
  },
  {
    title: 'Selfie Gate',
    desc: 'Zugang nur nach Selfie-Check erlauben.',
    href: '/dashboard/selfie-gate', // falls noch nicht vorhanden, spÃ¤ter anlegen
    feature: 'selfie_gate',
    cta: 'Konfigurieren'
  }
]
---

<DashboardLayout title="Model-Dashboard">
  <section class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-8">
    <header class="mb-8">
      <h1 class="text-2xl font-semibold tracking-tight">Hi {name} ðŸ‘‹</h1>
      <p class="text-neutral-400 mt-1">
        Paket: <span class="uppercase font-medium">{profile?.bot_paket || 'â€”'}</span>
      </p>
    </header>

    { user ? (
      <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
        {
          cards.map((card) => {
            const allowed = entitlements[card.feature]
            return (
              <article class={`rounded-2xl border border-neutral-800 bg-neutral-900 p-5 transition ${allowed ? 'hover:border-neutral-700 hover:bg-neutral-850' : 'opacity-60'}`}>
                <h3 class="text-lg font-semibold">{card.title}</h3>
                <p class="text-sm text-neutral-400 mt-1">{card.desc}</p>

                <div class="mt-4 flex items-center gap-3">
                  { allowed ? (
                    <a href={card.href} class="inline-flex items-center gap-2 rounded-xl bg-yellow-400 text-neutral-900 px-4 py-2 font-medium hover:opacity-90">
                      {card.cta || 'Ã–ffnen'}
                    </a>
                  ) : (
                    <>
                      <span class="text-xs text-neutral-400">Nicht in deinem Paket enthalten</span>
                      <a href="/preise" class="inline-flex items-center gap-2 rounded-xl border border-yellow-400 text-yellow-400 px-3 py-1.5 text-sm hover:bg-yellow-400/10">
                        Upgrade ansehen
                      </a>
                    </>
                  )}
                </div>
              </article>
            )
          })
        }
      </div>
    ) : (
      <div class="rounded-2xl border border-neutral-800 bg-neutral-900 p-6 text-center">
        <h3 class="text-lg font-semibold">Bitte einloggen</h3>
        <p class="text-neutral-400 mt-1">Um dein Dashboard zu sehen, melde dich an.</p>
        <a href="/login" class="inline-flex items-center gap-2 rounded-xl bg-yellow-400 text-neutral-900 px-4 py-2 font-medium hover:opacity-90 mt-4">
          Anmelden
        </a>
      </div>
    )}
  </section>
</DashboardLayout>
