---
import DashboardLayout from "../../layouts/DashboardLayout.astro";
---

<DashboardLayout title="VIP‚ÄëBot Einstellungen">
  <section class="max-w-3xl mx-auto px-4 py-12">
    <h1 class="text-3xl font-bold text-luxgold mb-6">VIP‚ÄëBot Einstellungen</h1>

    <div class="bg-black border border-luxgold rounded-xl p-6 space-y-6 shadow-xl" id="vipbotContainer" style="display:none">
      <form id="vipbotSettings" class="space-y-4">
        <div>
          <label class="block text-sm text-gray-400 mb-1">Telegram-Gruppenlink</label>
          <input type="url" name="gruppe_link" required class="w-full px-4 py-2 rounded bg-zinc-900 border border-zinc-600" placeholder="https://t.me/+..." />
        </div>

        <div>
          <label class="block text-sm text-gray-400 mb-1">PayPal-Adresse</label>
          <input type="email" name="paypal" required class="w-full px-4 py-2 rounded bg-zinc-900 border border-zinc-600" placeholder="deine@email.com" />
        </div>

        <div>
          <label class="block text-sm text-gray-400 mb-1">Preis f√ºr VIP-Mitgliedschaft (‚Ç¨)</label>
          <input type="number" name="preis" step="0.01" min="0" class="w-full px-4 py-2 rounded bg-zinc-900 border border-zinc-600" placeholder="z.‚ÄØB. 9.99" />
        </div>

        <div class="premium-fields hidden">
          <label class="block text-sm text-gray-400 mb-1">Eigener Begr√º√üungstext</label>
          <textarea name="welcome_text" rows="3" class="w-full px-4 py-2 rounded bg-zinc-900 border border-zinc-600" placeholder="Hi, willkommen in meiner Gruppe ‚Ä¶"></textarea>
        </div>

        <div class="premium-fields hidden">
          <label class="block text-sm text-gray-400 mb-1">Eigener Regeltext</label>
          <textarea name="regeln_text" rows="3" class="w-full px-4 py-2 rounded bg-zinc-900 border border-zinc-600" placeholder="Bitte beachte folgende Regeln ‚Ä¶"></textarea>
        </div>

        <div class="premium-fields hidden">
          <label class="inline-flex items-center gap-2">
            <input type="checkbox" name="selfie_check" class="form-checkbox h-5 w-5 text-luxgold bg-zinc-900 border border-zinc-600" />
            <span class="text-sm text-gray-300">SelfieCheck aktivieren</span>
          </label>
        </div>

        <button type="submit" class="bg-luxgold text-black font-bold py-2 px-6 rounded hover:bg-yellow-400 transition">
          Speichern
        </button>
        <p id="saveMsg" class="text-sm mt-2 min-h-[1.25rem]"></p>

        <div id="botLinkContainer" class="mt-4 hidden">
          <label class="block text-sm text-gray-400 mb-1">Dein pers√∂nlicher Bot-Link</label>
          <div class="flex items-center gap-2">
            <input id="botLink" readonly class="flex-1 px-4 py-2 bg-zinc-800 text-luxgold border border-luxgold rounded" />
            <button id="copyBotLink" type="button" class="px-3 py-2 bg-luxgold text-black font-bold rounded hover:bg-yellow-400 transition">
              Kopieren
            </button>
          </div>
          <p id="copyMsg" class="text-sm mt-2 text-luxgold h-5"></p>
        </div>
      </form>

      <hr class="border-luxgray/30" />

      <div class="text-sm text-gray-400 space-y-3">
        <h2 class="text-lg font-bold text-luxgold">üß≠ Anleitung f√ºr deine Einstellungen</h2>
        <ul class="list-decimal list-inside space-y-1">
          <li>F√ºge den Link zu deiner Telegram-Gruppe ein.</li>
          <li>Gib die PayPal-Adresse an, auf die Nutzer Tipps senden k√∂nnen.</li>
          <li>Trage den gew√ºnschten Preis f√ºr den VIP-Zugang ein (z.‚ÄØB. 9.99).</li>
          <li>Nur bei Premium: Eigene Texte f√ºr Begr√º√üung & Regeln definieren.</li>
          <li>SelfieCheck aktivieren, wenn du verifizieren willst.</li>
          <li>Klick auf Speichern ‚Äì √Ñnderungen greifen direkt im Bot.</li>
        </ul>
      </div>
    </div>
  </section>

 <script type="module">
  import * as supabase_js from "https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";

  const meta = document.getElementById("supabase-config");
  const supabase = supabase_js.createClient(meta.dataset.url, meta.dataset.key);
  const form = document.getElementById("vipbotSettings");
  const msg = document.getElementById("saveMsg");
  const lux = JSON.parse(sessionStorage.getItem("luxbase_config") || "{}");

  const botLinkInput = document.getElementById("botLink");
  const botLinkContainer = document.getElementById("botLinkContainer");
  const copyBtn = document.getElementById("copyBotLink");
  const copyMsg = document.getElementById("copyMsg");

  if (!lux?.creator_id) {
    msg.textContent = "‚ùå Nicht eingeloggt oder keine Konfiguration gefunden.";
    msg.className = "text-red-400";
  } else {
    if (lux.has_vipbot) {
      document.getElementById("vipbotContainer").style.display = "block";
    }

    // Felder bef√ºllen
    for (const el of form.elements) {
      if (el.name && lux[el.name] !== undefined) {
        if (el.type === "checkbox") {
          el.checked = !!lux[el.name];
        } else {
          el.value = lux[el.name] ?? "";
        }
      }
    }

    if (lux.bot_paket === "premium") {
      document.querySelectorAll(".premium-fields").forEach(e => e.classList.remove("hidden"));
    }

    // Sicheren Token erzeugen
    function generateSecureToken(length = 12) {
      const charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-_!$%";
      return Array.from({ length }, () => charset[Math.floor(Math.random() * charset.length)]).join("");
    }

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      msg.textContent = "";

      const formData = new FormData(form);
      const updateData = {
        gruppe_link: formData.get("gruppe_link"),
        paypal: formData.get("paypal"),
        preis: parseFloat(formData.get("preis_vip") || "0"),
        telegram_id: formData.get("telegram_username"),
        email: formData.get("support_email")
      };

      if (lux.bot_paket === "premium") {
        updateData.welcome_text = formData.get("begr√º√üung_text");
        updateData.regeln_text = formData.get("regeln_text");
        updateData.selfie_check = form.selfie_check.checked;
      }

      // Token generieren, falls noch keiner existiert
      if (!lux.telegramlink) {
        updateData.telegramlink = generateSecureToken();
      }

      const { error } = await supabase
        .from("creator_config")
        .update(updateData)
        .match({ creator_id: lux.creator_id });

      if (error) {
        msg.textContent = "‚ùå Fehler beim Speichern: " + error.message;
        msg.className = "text-red-400";
        return;
      }

      const { data: updated } = await supabase
        .from("creator_config")
        .select("*")
        .match({ creator_id: lux.creator_id })
        .single();

      if (updated) {
        const paketFeatures = {
          basic: { show_selfie_gate: false, can_customize_texts: false },
          premium: { show_selfie_gate: true, can_customize_texts: true },
        };

        const features = paketFeatures[updated.bot_paket] || paketFeatures.basic;
        sessionStorage.setItem("luxbase_config", JSON.stringify({ ...updated, ...features }));

        msg.textContent = "‚úÖ Erfolgreich gespeichert.";
        msg.className = "text-green-400";

        // Bot-Link anzeigen
        if (updated.telegramlink && botLinkInput && botLinkContainer) {
          const link = `https://t.me/LUXEntryBot?start=${updated.telegramlink}`;
          botLinkInput.value = link;
          botLinkContainer.classList.remove("hidden");

          copyBtn?.addEventListener("click", async () => {
            try {
              await navigator.clipboard.writeText(link);
              copyMsg.textContent = "‚úÖ Link kopiert!";
              setTimeout(() => copyMsg.textContent = "", 2000);
            } catch (err) {
              copyMsg.textContent = "‚ùå Fehler beim Kopieren.";
            }
          });
        }

        // Kein reload mehr n√∂tig
      }
    });
  }
</script>

</DashboardLayout>
