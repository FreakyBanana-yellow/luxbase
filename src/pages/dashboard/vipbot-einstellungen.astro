---
import DashboardLayout from "../../layouts/DashboardLayout.astro";
---

<DashboardLayout title="VIP‑Bot Einstellungen">
  <section class="max-w-3xl mx-auto px-4 py-6 space-y-6">
    <form id="botForm" class="space-y-5">
      <div class="bg-black/60 border border-luxgray rounded-2xl p-4 space-y-4">
        <h2 class="text-luxgold text-lg font-semibold">Basis</h2>

        <label class="block">
          <span class="text-sm text-white/70">Telegram Start‑Parameter (z. B. dein Handle oder custom Slug)</span>
          <input id="telegramlink" class="mt-1 w-full bg-black/40 border border-luxgray rounded-xl px-3 py-2" placeholder="z.B. @deinhandle oder lux_anna" />
        </label>

        <label class="block">
          <span class="text-sm text-white/70">Bot‑Username (ohne @)</span>
          <input id="bot_username" class="mt-1 w-full bg-black/40 border border-luxgray rounded-xl px-3 py-2" placeholder="z.B. luxbase_vip_bot" />
        </label>

        <div class="grid grid-cols-2 gap-3">
          <label class="block">
            <span class="text-sm text-white/70">Preis (€)</span>
            <input id="preis" type="number" step="1" min="0" class="mt-1 w-full bg-black/40 border border-luxgray rounded-xl px-3 py-2" placeholder="29" />
          </label>
          <label class="block">
            <span class="text-sm text-white/70">VIP‑Dauer (Tage)</span>
            <input id="vip_days" type="number" step="1" min="1" class="mt-1 w-full bg-black/40 border border-luxgray rounded-xl px-3 py-2" placeholder="30" />
          </label>
        </div>
      </div>

      <div class="bg-black/60 border border-luxgray rounded-2xl p-4 space-y-4">
        <h2 class="text-luxgold text-lg font-semibold">Gruppe</h2>

        <label class="block">
          <span class="text-sm text-white/70">Gruppen‑Link (Fallback, statisch)</span>
          <input id="gruppe_link" class="mt-1 w-full bg-black/40 border border-luxgray rounded-xl px-3 py-2" placeholder="https://t.me/+abcdef..." />
        </label>

        <label class="block">
          <span class="text-sm text-white/70">Gruppen‑Chat‑ID (empfohlen für Auto‑Invite & Kick)</span>
          <input id="group_chat_id" class="mt-1 w-full bg-black/40 border border-luxgray rounded-xl px-3 py-2" placeholder="-1001234567890" />
        </label>
      </div>

      <div class="bg-black/60 border border-luxgray rounded-2xl p-4 space-y-4">
        <h2 class="text-luxgold text-lg font-semibold">Zahlung (Stripe)</h2>

        <label class="block">
          <span class="text-sm text-white/70">Stripe Price ID (optional – sonst Preis aus oben)</span>
          <input id="stripe_price_id" class="mt-1 w-full bg-black/40 border border-luxgray rounded-xl px-3 py-2" placeholder="price_123..." />
        </label>
      </div>

      <div class="bg-black/60 border border-luxgray rounded-2xl p-4 space-y-4">
        <h2 class="text-luxgold text-lg font-semibold">Texte</h2>

        <label class="block">
          <span class="text-sm text-white/70">Welcome‑Text</span>
          <textarea id="welcome_text" rows="3" class="mt-1 w-full bg-black/40 border border-luxgray rounded-xl px-3 py-2" placeholder="👋 Willkommen im VIP! ..."></textarea>
        </label>

        <label class="block">
          <span class="text-sm text-white/70">Regeln‑Text</span>
          <textarea id="regeln_text" rows="3" class="mt-1 w-full bg-black/40 border border-luxgray rounded-xl px-3 py-2" placeholder="📜 Regeln ..."></textarea>
        </label>
      </div>

      <div class="flex items-center gap-3">
        <button id="saveBtn" type="submit" class="flex-1 bg-luxgold/90 text-black font-semibold rounded-xl py-3">Speichern</button>
        <button id="testLinkBtn" type="button" class="px-4 py-3 border border-luxgray rounded-xl">Start‑Link kopieren</button>
      </div>

      <p id="hint" class="text-xs text-white/60"></p>
    </form>
  </section>

  <script type="module">
    import { createClient } from "https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";

    const meta = document.getElementById("supabase-config");
    const supabase = createClient(meta.dataset.url, meta.dataset.key);

    const $ = (id) => document.getElementById(id);
    const fields = ["telegramlink","bot_username","preis","vip_days","gruppe_link","group_chat_id","stripe_price_id","welcome_text","regeln_text"];

    const { data: { user } } = await supabase.auth.getUser();
    if (!user) { window.location.href = "/"; throw new Error("not-auth"); }

    // Laden
    const { data: cfg, error: err } = await supabase
      .from("creator_config")
      .select(fields.join(","))
      .eq("creator_id", user.id)
      .maybeSingle();

    if (err) console.warn(err);
    if (cfg) {
      for (const k of fields) if ($(k)) $(k).value = cfg[k] ?? "";
    }

    // Speichern
    $("botForm").addEventListener("submit", async (e) => {
      e.preventDefault();
      $("saveBtn").disabled = true;

      const payload = { creator_id: user.id };
      for (const k of fields) payload[k] = $(k)?.value ?? null;

      // Nummern sauber casten
      payload.preis = Number(payload.preis || 0);
      payload.vip_days = Number(payload.vip_days || 30);

      const { error: upErr } = await supabase
        .from("creator_config")
        .upsert(payload, { onConflict: "creator_id" });

      $("saveBtn").disabled = false;
      $("hint").textContent = upErr ? "❌ Speichern fehlgeschlagen." : "✅ Gespeichert.";
    });

    // Start‑Link bauen & kopieren
    $("testLinkBtn").addEventListener("click", async () => {
      const bot = $("bot_username").value?.replace(/^@/, "");
      const slug = $("telegramlink").value?.trim();
      const deeplink = bot && slug
        ? `https://t.me/${bot}?start=${encodeURIComponent(slug.startsWith("creator_") ? slug : "creator_"+slug)}`
        : "Bitte Bot‑Username & Start‑Parameter ausfüllen.";
      await navigator.clipboard.writeText(deeplink);
      $("hint").textContent = "🔗 Start‑Link kopiert: " + deeplink;
    });
  </script>
</DashboardLayout>
