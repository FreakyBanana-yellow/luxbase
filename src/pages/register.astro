---
/* register.astro  –  standalone */
const SUPABASE_URL  = import.meta.env.PUBLIC_SUPABASE_URL;
const SUPABASE_KEY  = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
---

<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Registrieren – Luxbase</title>

  <!-- Fonts & Basics -->
  <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Playfair+Display:wght@400;700&display=swap" rel="stylesheet" />
  <meta name="theme-color" content="#0d0d0d" />

  <!-- Tailwind / globale Styles vom Projekt -->
  <link rel="stylesheet" href="/styles/global.css" />

  <!-- Supabase CDN -->
  <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
  <script>
    window.supabase = supabase.createClient("<?= SUPABASE_URL ?>","<?= SUPABASE_KEY ?>");
  </script>
</head>

<body class="bg-luxblack text-white font-sans flex justify-center items-center min-h-screen px-4">

  <!-- =====================  FORM  ===================== -->
  <form id="registerForm"
        class="bg-zinc-900 border border-luxgold rounded-xl p-8 w-full max-w-md shadow-xl">

    <h1 class="text-2xl font-serif font-bold text-center text-luxgold mb-6">
      Registrieren
    </h1>

    <input id="name" type="text" placeholder="Dein Name" required
           class="w-full px-4 py-2 mb-4 rounded bg-zinc-800 border border-zinc-600" />

    <input id="email" type="email" placeholder="E-Mail" required
           class="w-full px-4 py-2 mb-4 rounded bg-zinc-800 border border-zinc-600" />

    <select id="role" required
            class="w-full px-4 py-2 mb-4 rounded bg-zinc-800 border border-zinc-600">
      <option value="creator">Creator / Model</option>
      <option value="agentur">Agentur</option>
    </select>

    <!-- pass + toggles -->
    <div class="relative mb-3">
      <input id="password" type="password" placeholder="Passwort" required
             class="w-full px-4 py-2 pr-10 rounded bg-zinc-800 border border-zinc-600" />
      <button type="button" id="togglePw"
              class="absolute right-2 top-2 text-yellow-400 select-none">👁</button>
    </div>

    <div class="relative mb-2">
      <input id="confirm" type="password" placeholder="Passwort wiederholen" required
             class="w-full px-4 py-2 pr-10 rounded bg-zinc-800 border border-zinc-600" />
      <button type="button" id="toggleConfirm"
              class="absolute right-2 top-2 text-yellow-400 select-none">👁</button>
    </div>

    <!-- live rules -->
    <ul id="pwRules" class="text-sm mb-4 space-y-0.5 leading-tight">
      <li id="rLen"   class="text-red-400">• Mind. 8 Zeichen</li>
      <li id="rUp"    class="text-red-400">• Mind. 1 Großbuchstabe</li>
      <li id="rLow"   class="text-red-400">• Mind. 1 Kleinbuchstabe</li>
      <li id="rNum"   class="text-red-400">• Mind. 1 Zahl</li>
      <li id="rMatch" class="text-red-400">• Passwörter gleich</li>
    </ul>

    <button type="submit"
            class="w-full bg-luxgold text-luxblack font-bold py-2 rounded hover:bg-yellow-400 transition">
      Registrieren
    </button>

    <p id="msg" class="mt-4 text-center text-sm min-h-[1.25rem]"></p>
  </form>

  <!-- =====================  LOGIK  ===================== -->
  <script type="module">
    const form       = document.getElementById('registerForm');
    const pw         = document.getElementById('password');
    const confirm    = document.getElementById('confirm');
    const msg        = document.getElementById('msg');

    // ---- Live PW-Check --------------------------------------------------
    const rules = {
      rLen  : v => v.length >= 8,
      rUp   : v => /[A-Z]/.test(v),
      rLow  : v => /[a-z]/.test(v),
      rNum  : v => /\d/.test(v),
      rMatch: () => pw.value === confirm.value && pw.value !== ''
    };
    function updateRules() {
      const v = pw.value;
      for (const [id, fn] of Object.entries(rules)) {
        const ok = id === 'rMatch' ? fn() : fn(v);
        document.getElementById(id).classList.toggle('text-green-400', ok);
        document.getElementById(id).classList.toggle('text-red-400', !ok);
      }
      return Object.values(rules).every(fn => (fn.name === '' ? fn() : fn(v)));
    }
    pw.addEventListener('input', updateRules);
    confirm.addEventListener('input', updateRules);

    // ---- Toggle Visibility ---------------------------------------------
    document.getElementById('togglePw'     ).onclick = () => pw.type      = pw.type      === 'password' ? 'text' : 'password';
    document.getElementById('toggleConfirm').onclick = () => confirm.type = confirm.type === 'password' ? 'text' : 'password';

    // ---- Submit ---------------------------------------------------------
    form.onsubmit = async e => {
      e.preventDefault();
      msg.textContent = ''; msg.className = 'mt-4 text-center text-sm';

      if (!updateRules()) {
        msg.textContent = '❌ Passwort erfüllt nicht alle Anforderungen.';
        msg.classList.add('text-red-400');
        return;
      }

      const name  = document.getElementById('name').value.trim();
      const email = document.getElementById('email').value.trim();
      const role  = document.getElementById('role').value;

      // 1) User anlegen
      const { data, error } = await window.supabase.auth.signUp({
        email,
        password: pw.value,
      });

      if (error) {
        msg.textContent = '❌ ' + error.message;
        msg.classList.add('text-red-400');
        return;
      }

      // 2) Profil schreiben
      const { error: insErr } = await window.supabase
        .from('profiles')
        .insert([
          { id: data.user.id, name, role, email }
        ]);

      if (insErr) {
        msg.textContent = '⚠️ Profil konnte nicht gespeichert werden: ' + insErr.message;
        msg.classList.add('text-red-400');
        return;
      }

      // Erfolg
      msg.textContent = '✅ Registrierung erfolgreich – bitte E-Mail bestätigen.';
      msg.classList.add('text-green-400');
      setTimeout(() => window.location.href = '/dashboard', 2200);
    };
  </script>
</body>
</html>
