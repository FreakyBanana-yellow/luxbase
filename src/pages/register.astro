---
import { createClient } from '@supabase/supabase-js';
import Layout from "../layouts/BaseLayout.astro";

const supabase = createClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY
);
---

<html lang="de">
  <head>
    <title>Registrieren ‚Äì Luxbase</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  </head>

  <body class="bg-luxblack text-white flex justify-center items-center min-h-screen px-4">
    <form class="bg-black border border-luxgold rounded-xl p-8 w-full max-w-md" id="registerForm">
      <h1 class="text-2xl font-bold text-center text-luxgold mb-6">Registrieren</h1>

      <input id="name" type="text" placeholder="Dein Name" required class="w-full px-4 py-2 mb-4 rounded bg-gray-800 border border-gray-600" />

      <input id="email" type="email" placeholder="E‚ÄëMail" required class="w-full px-4 py-2 mb-4 rounded bg-gray-800 border border-gray-600" />

      <select id="role" required class="w-full px-4 py-2 mb-4 rounded bg-gray-800 border border-gray-600">
        <option value="creator">Creator / Model</option>
        <option value="agentur">Agentur</option>
      </select>

      <div class="relative mb-2">
        <input id="password" type="password" placeholder="Passwort" required class="w-full px-4 py-2 pr-10 rounded bg-gray-800 border border-gray-600" />
        <button type="button" id="togglePw" class="absolute right-2 top-2 text-sm text-luxgold">üëÅ</button>
      </div>

      <input id="confirmPassword" type="password" placeholder="Passwort wiederholen" required class="w-full px-4 py-2 mb-2 rounded bg-gray-800 border border-gray-600" />

      <ul class="text-sm mb-4" id="passwordCriteria">
        <li id="len" class="text-red-400">‚Ä¢ Mind. 8 Zeichen</li>
        <li id="upper" class="text-red-400">‚Ä¢ Mind. 1 Gro√übuchstabe</li>
        <li id="lower" class="text-red-400">‚Ä¢ Mind. 1 Kleinbuchstabe</li>
        <li id="num" class="text-red-400">‚Ä¢ Mind. 1 Zahl</li>
        <li id="match" class="text-red-400">‚Ä¢ Beide Passw√∂rter m√ºssen √ºbereinstimmen</li>
      </ul>

      <button type="submit" class="w-full bg-luxgold text-black font-bold py-2 rounded hover:bg-yellow-400 transition">Registrieren</button>

      <p id="error" class="text-red-400 text-sm mt-4 text-center"></p>
      <p id="success" class="text-green-400 text-sm mt-4 text-center"></p>
    </form>

    <script type="module">
      const supabase = window.supabase;

      const form = document.getElementById('registerForm');
      const pw = document.getElementById('password');
      const confirm = document.getElementById('confirmPassword');
      const error = document.getElementById('error');
      const success = document.getElementById('success');

      const criteria = {
        len: document.getElementById('len'),
        upper: document.getElementById('upper'),
        lower: document.getElementById('lower'),
        num: document.getElementById('num'),
        match: document.getElementById('match')
      };

      function checkPassword() {
        const value = pw.value;
        const confirmVal = confirm.value;

        criteria.len.classList.toggle('text-green-400', value.length >= 8);
        criteria.len.classList.toggle('text-red-400', value.length < 8);

        criteria.upper.classList.toggle('text-green-400', /[A-Z]/.test(value));
        criteria.upper.classList.toggle('text-red-400', !/[A-Z]/.test(value));

        criteria.lower.classList.toggle('text-green-400', /[a-z]/.test(value));
        criteria.lower.classList.toggle('text-red-400', !/[a-z]/.test(value));

        criteria.num.classList.toggle('text-green-400', /\d/.test(value));
        criteria.num.classList.toggle('text-red-400', !/\d/.test(value));

        const match = value === confirmVal && value !== '';
        criteria.match.classList.toggle('text-green-400', match);
        criteria.match.classList.toggle('text-red-400', !match);

        return value.length >= 8 && /[A-Z]/.test(value) && /[a-z]/.test(value) && /\d/.test(value) && match;
      }

      pw.addEventListener('input', checkPassword);
      confirm.addEventListener('input', checkPassword);

      document.getElementById('togglePw').addEventListener('click', () => {
        pw.type = pw.type === 'password' ? 'text' : 'password';
      });

      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        error.textContent = '';
        success.textContent = '';

        if (!checkPassword()) {
          error.textContent = 'Passwort erf√ºllt nicht alle Anforderungen.';
          return;
        }

        const name = document.getElementById('name').value.trim();
        const email = document.getElementById('email').value.trim();
        const role = document.getElementById('role').value;
        const password = pw.value;

        const { data, error: regError } = await supabase.auth.signUp({
          email,
          password,
          options: {
            data: { name, role }
          }
        });

        if (regError) {
          error.textContent = regError.message;
        } else {
          // Optional: Zus√§tzlich in 'profiles' Tabelle eintragen
          /*
          await supabase.from('profiles').insert({
            id: data.user.id,
            name,
            email,
            role
          });
          */

          success.textContent = 'Registrierung erfolgreich. Bitte E‚ÄëMail best√§tigen.';
          form.reset();
          setTimeout(() => window.location.href = "/dashboard", 1500);
        }
      });
    </script>
  </body>
</html>
