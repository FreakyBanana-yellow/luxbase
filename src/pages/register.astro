<script type="module">
  import { supabase } from '/src/lib/supabase';

  const form = document.getElementById('regForm');
  const msg = document.getElementById('msg');
  const pass = document.getElementById('pass');
  const passRepeat = document.getElementById('passRepeat');

  const length = document.getElementById('length');
  const upper = document.getElementById('upper');
  const lower = document.getElementById('lower');
  const number = document.getElementById('number');

  const togglePass = document.getElementById('togglePass');

  // Live Passwortpr√ºfung
  const validatePassword = (value) => {
    length.classList.toggle('text-green-400', value.length >= 8);
    length.classList.toggle('text-red-400', value.length < 8);

    upper.classList.toggle('text-green-400', /[A-Z]/.test(value));
    upper.classList.toggle('text-red-400', !/[A-Z]/.test(value));

    lower.classList.toggle('text-green-400', /[a-z]/.test(value));
    lower.classList.toggle('text-red-400', !/[a-z]/.test(value));

    number.classList.toggle('text-green-400', /\d/.test(value));
    number.classList.toggle('text-red-400', !/\d/.test(value));
  };

  // Passwort-Input √ºberwachen
  pass.addEventListener('input', (e) => {
    validatePassword(e.target.value);
  });

  // Passwort sichtbar machen
  togglePass.addEventListener('click', () => {
    pass.type = pass.type === 'password' ? 'text' : 'password';
    togglePass.textContent = pass.type === 'password' ? 'üëÅ' : 'üôà';
  });

  // Formular senden
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    msg.textContent = '';

    const name = document.getElementById('name').value.trim();
    const email = document.getElementById('email').value.trim();
    const role = document.getElementById('role').value;
    const pw = pass.value.trim();
    const pw2 = passRepeat.value.trim();

    validatePassword(pw); // Nochmals sicherstellen

    if (pw !== pw2) {
      msg.textContent = 'Passw√∂rter stimmen nicht √ºberein.';
      return;
    }

    if (
      pw.length < 8 ||
      !/[A-Z]/.test(pw) ||
      !/[a-z]/.test(pw) ||
      !/\d/.test(pw)
    ) {
      msg.textContent = 'Passwort erf√ºllt nicht alle Kriterien.';
      return;
    }

    const { data, error } = await supabase.auth.signUp({
      email,
      password: pw,
    });

    if (error) {
      msg.textContent = error.message;
      return;
    }

    const { error: insertErr } = await supabase
      .from('profiles')
      .insert({ id: data.user.id, name, role });

    if (insertErr) {
      msg.textContent = 'Registrierung ok ‚Äì Profil konnte nicht gespeichert werden.';
      console.error(insertErr);
      return;
    }

    msg.textContent = 'Erfolgreich registriert ‚Äì Weiterleitung ...';
    setTimeout(() => (location.href = '/dashboard'), 1000);
  });
</script>
