---
import BaseLayout from '@/layouts/BaseLayout.astro';
;
---

<BaseLayout title="Registrieren ‚Äì Luxbase">
  <form
    id="registerForm"
    action="#"
    novalidate
    class="bg-zinc-900 border border-luxgold rounded-xl p-8 w-full max-w-md mx-auto mt-12 shadow-xl"
  >
    <h1 class="text-2xl font-serif font-bold text-center text-luxgold mb-6">
      Registrieren
    </h1>

    <input id="displayName" type="text" placeholder="Anzeigename / Firmenname" required
           class="w-full px-4 py-2 mb-4 rounded bg-zinc-800 border border-zinc-600" />

    <input id="email" type="email" placeholder="E-Mail" required
           class="w-full px-4 py-2 mb-4 rounded bg-zinc-800 border border-zinc-600" />

    <label class="block mb-1 text-sm text-zinc-300">Ich bin</label>
    <select id="accountType" required
            class="w-full px-4 py-2 mb-4 rounded bg-zinc-800 border border-zinc-600">
      <option value="model">Creator / Model</option>
      <option value="agency">Agentur</option>
    </select>

    <!-- Passwort + Sichtbarkeit -->
    <div class="relative mb-3">
      <input id="password" type="password" placeholder="Passwort" required
             class="w-full px-4 py-2 pr-10 rounded bg-zinc-800 border border-zinc-600" />
      <button type="button" id="togglePw"
              class="absolute right-2 top-2 text-yellow-400 select-none" aria-label="Passwort anzeigen">üëÅ</button>
    </div>

    <div class="relative mb-4">
      <input id="confirm" type="password" placeholder="Passwort wiederholen" required
             class="w-full px-4 py-2 pr-10 rounded bg-zinc-800 border border-zinc-600" />
      <button type="button" id="toggleConfirm"
              class="absolute right-2 top-2 text-yellow-400 select-none" aria-label="Passwort wiederholen anzeigen">üëÅ</button>
    </div>

    <ul id="pwRules" class="text-sm mb-4 space-y-0.5 leading-tight">
      <li id="rLen"   class="text-red-400">‚Ä¢ Mind. 8 Zeichen</li>
      <li id="rUp"    class="text-red-400">‚Ä¢ Mind. 1 Gro√übuchstabe</li>
      <li id="rLow"   class="text-red-400">‚Ä¢ Mind. 1 Kleinbuchstabe</li>
      <li id="rNum"   class="text-red-400">‚Ä¢ Mind. 1 Zahl</li>
      <li id="rMatch" class="text-red-400">‚Ä¢ Passw√∂rter gleich</li>
    </ul>

    <button id="submitBtn" type="submit"
            class="w-full bg-luxgold text-luxblack font-bold py-2 rounded hover:bg-yellow-400 transition">
      Registrieren
    </button>

    <p id="msg" class="mt-4 text-center text-sm min-h-[1.25rem]"></p>
  </form>

  <!-- Supabase + Logik -->
  <script type="module">
    import { createClient } from "https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";

    const meta = document.getElementById("supabase-config");
    const supabase = createClient(meta.dataset.url, meta.dataset.key);

    const $ = (id) => document.getElementById(id);
    const form = $("registerForm");
    const pw = $("password");
    const confirm = $("confirm");
    const msg = $("msg");
    const submitBtn = $("submitBtn");

    // Passwortregeln
    const rules = {
      rLen  : v => v.length >= 8,
      rUp   : v => /[A-Z]/.test(v),
      rLow  : v => /[a-z]/.test(v),
      rNum  : v => /\d/.test(v),
      rMatch: () => pw.value === confirm.value && pw.value !== ""
    };
    function updateRules () {
      const v = pw.value;
      for (const [id, fn] of Object.entries(rules)) {
        const ok = id === "rMatch" ? fn() : fn(v);
        $(id).classList.toggle("text-green-400", ok);
        $(id).classList.toggle("text-red-400",  !ok);
      }
      return Object.values(rules).every(fn => (fn.name === "" ? fn() : fn(pw.value)));
    }
    pw.addEventListener("input", updateRules);
    confirm.addEventListener("input", updateRules);

    // Sichtbarkeit
    $("togglePw").onclick      = () => pw.type      = pw.type      === "password" ? "text" : "password";
    $("toggleConfirm").onclick = () => confirm.type = confirm.type === "password" ? "text" : "password";

    // Nach Login/Signup weiterleiten
    async function routeAfterLogin(accountType) {
      // Wenn du eine eigene Helper-Funktion hast, kannst du die hier nutzen.
      if (accountType === "agency") {
        window.location.href = "/agency";
      } else {
        window.location.href = "/dashboard/model";
      }
    }

    // Submit
    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      msg.textContent = "";
      msg.className   = "mt-4 text-center text-sm";
      submitBtn.disabled = true;

      try {
        if (!updateRules()) {
          msg.textContent = "‚ùå Passwort erf√ºllt nicht alle Anforderungen.";
          msg.classList.add("text-red-400");
          return;
        }

        const displayName = $("displayName").value.trim();
        const email       = $("email").value.trim();
        const accountType = $("accountType").value; // 'agency' | 'model'

        if (!displayName || !email) {
          msg.textContent = "‚ùå Bitte Anzeigename und E-Mail ausf√ºllen.";
          msg.classList.add("text-red-400");
          return;
        }

        // Signup ‚Äì der DB-Trigger provisioniert basierend auf account_type & display_name
        const { data, error } = await supabase.auth.signUp({
          email,
          password: pw.value,
          options: {
            data: {
              account_type: accountType,   // <<<<<< wichtig f√ºr den Trigger
              display_name: displayName    // <<<<<< wichtig f√ºr den Trigger
            },
            // Stelle sicher, dass diese URL in Supabase -> Auth -> Redirect URLs whitelisted ist
            emailRedirectTo: window.location.origin + "/login"
          }
        });

        if (error) {
          msg.textContent = "‚ùå " + error.message;
          msg.classList.add("text-red-400");
          return;
        }

        if (!data.session) {
          // E-Mail-Best√§tigung aktiv -> keine Session
          msg.textContent = "‚úâÔ∏è Bitte best√§tige deine E-Mail. Danach kannst du dich einloggen.";
          msg.classList.add("text-green-400");
        } else {
          // Direkt eingeloggt ‚Üí weiterleiten (der Trigger hat schon provisioniert)
          msg.textContent = "‚úÖ Registrierung erfolgreich.";
          msg.classList.add("text-green-400");
          setTimeout(() => routeAfterLogin(accountType), 600);
        }
      } catch (err) {
        console.error(err);
        msg.textContent = "‚ùå Unerwarteter Fehler beim Registrieren.";
        msg.classList.add("text-red-400");
      } finally {
        submitBtn.disabled = false;
      }
    });
  </script>
</BaseLayout>
