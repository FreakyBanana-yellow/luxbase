---
// src/pages/register.astro
import Layout from "../layouts/BaseLayout.astro";
---

<Layout>
  <section class="min-h-[80vh] flex items-center justify-center px-4 py-20">
    <div
      class="w-full max-w-md bg-luxgray border border-luxgold/50 rounded-2xl shadow-xl p-8 text-white"
    >
      <h1 class="text-2xl font-serif font-bold text-luxgold text-center mb-6">
        Registrieren
      </h1>

      <!-- ===== Form ===== -->
      <form id="regForm" class="space-y-4" novalidate>
        <input
          id="name"
          type="text"
          placeholder="Dein Name"
          class="w-full px-4 py-3 rounded bg-black border border-gray-700 focus:outline-none focus:ring-1 focus:ring-luxgold"
          required
        />

        <input
          id="email"
          type="email"
          placeholder="E-Mail"
          class="w-full px-4 py-3 rounded bg-black border border-gray-700 focus:outline-none focus:ring-1 focus:ring-luxgold"
          required
        />

        <select
          id="role"
          class="w-full px-4 py-3 rounded bg-black border border-gray-700 text-white focus:outline-none focus:ring-1 focus:ring-luxgold"
          required
        >
          <option value="">Rolle wählen</option>
          <option value="creator">Creator / Model</option>
          <option value="agentur">Agentur</option>
        </select>

        <!-- Passwörter -->
        <div class="relative">
          <input
            id="password"
            type="password"
            placeholder="Passwort"
            class="w-full px-4 py-3 pr-10 rounded bg-black border border-gray-700 focus:outline-none focus:ring-1 focus:ring-luxgold"
            required
          />
          <button
            type="button"
            id="pwToggle1"
            class="absolute right-3 top-3 text-luxgold text-sm"
          >
            👁
          </button>
        </div>

        <div class="relative">
          <input
            id="confirm"
            type="password"
            placeholder="Passwort bestätigen"
            class="w-full px-4 py-3 pr-10 rounded bg-black border border-gray-700 focus:outline-none focus:ring-1 focus:ring-luxgold"
            required
          />
          <button
            type="button"
            id="pwToggle2"
            class="absolute right-3 top-3 text-luxgold text-sm"
          >
            👁
          </button>
        </div>

        <!-- Live-Regeln -->
        <ul id="rules" class="text-xs space-y-1 mb-2">
          <li id="rLen" class="text-red-400">• Mind. 8 Zeichen</li>
          <li id="rUp"  class="text-red-400">• Mind. 1 Großbuchstabe</li>
          <li id="rLow" class="text-red-400">• Mind. 1 Kleinbuchstabe</li>
          <li id="rNum" class="text-red-400">• Mind. 1 Zahl</li>
        </ul>

        <button
          type="submit"
          class="w-full bg-luxgold text-luxblack font-semibold py-3 rounded hover:bg-yellow-400 transition"
        >
          Registrieren
        </button>

        <p id="msg" class="text-center text-sm mt-2 min-h-[1.4rem]"></p>
      </form>
    </div>
  </section>

  <!-- ========== REGISTRATION SCRIPT ========== -->
  <script type="module">
    // ----- Helpers -----
    const $ = (id) => document.getElementById(id);

    // Passwort-Regeln live prüfen
    const pwInput = $("password");
    const rules = {
      rLen:  (v) => v.length >= 8,
      rUp:   (v) => /[A-Z]/.test(v),
      rLow:  (v) => /[a-z]/.test(v),
      rNum:  (v) => /\\d/.test(v),
    };
    pwInput.addEventListener("input", () => {
      const v = pwInput.value;
      for (const [id, fn] of Object.entries(rules)) {
        $(id).classList.toggle("text-green-400", fn(v));
        $(id).classList.toggle("text-red-400", !fn(v));
      }
    });

    // Passwort sichtbar machen
    const togglePw = (field) => {
      const f = $(field);
      f.type = f.type === "password" ? "text" : "password";
    };
    $("pwToggle1").addEventListener("click", () => togglePw("password"));
    $("pwToggle2").addEventListener("click", () => togglePw("confirm"));

    // ----- Submit -----
    $("regForm").addEventListener("submit", async (e) => {
      e.preventDefault();
      const msg = $("msg");
      msg.textContent = "";

      const name  = $("name").value.trim();
      const email = $("email").value.trim();
      const role  = $("role").value;
      const pass  = $("password").value;
      const conf  = $("confirm").value;

      // Checks
      if (pass !== conf) {
        msg.textContent = "Passwörter stimmen nicht überein.";
        return;
      }
      if (!Object.values(rules).every((fn) => fn(pass))) {
        msg.textContent = "Passwort erfüllt nicht alle Anforderungen.";
        return;
      }

      // Supabase Sign-Up
      const { data, error } = await window.supabase.auth.signUp({
        email,
        password: pass,
      });

      if (error) {
        msg.textContent = error.message;
        return;
      }

      // Profil anlegen
      const { error: profErr } = await window.supabase
        .from("profiles")
        .insert({ id: data.user.id, name, role, email });

      if (profErr) console.error(profErr);

      msg.textContent = "Erfolgreich registriert – Weiterleitung …";
      msg.classList.add("text-green-400");
      setTimeout(() => (window.location.href = "/dashboard"), 1500);
    });
  </script>
</Layout>
