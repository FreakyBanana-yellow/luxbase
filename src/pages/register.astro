---
import "../styles/global.css";
---

<html lang="de">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Registrieren ‚Äì Luxbase</title>
  </head>

  <body class="min-h-screen flex items-center justify-center bg-luxblack text-white">
    <form id="regForm"
          class="w-full max-w-md bg-luxgray p-8 rounded-xl shadow-lux space-y-4">
      <h1 class="text-3xl font-serif font-bold text-luxgold mb-4 text-center">
        Konto erstellen
      </h1>

      <input id="name"  type="text"     placeholder="Dein Name"
             class="w-full px-4 py-3 rounded bg-black border border-gray-600" />

      <input id="email" type="email"    placeholder="E-Mail"
             class="w-full px-4 py-3 rounded bg-black border border-gray-600" required />

      <!-- Passwortfeld mit Sichtbarkeitsschalter -->
      <div class="relative">
        <input id="pass" type="password" placeholder="Passwort"
               class="w-full px-4 py-3 pr-12 rounded bg-black border border-gray-600" required />
        <button type="button" id="togglePass"
                class="absolute right-3 top-3 text-sm text-luxgold">üëÅ</button>
      </div>

      <input id="passRepeat" type="password" placeholder="Passwort wiederholen"
             class="w-full px-4 py-3 rounded bg-black border border-gray-600" required />

      <!-- Passwortrichtlinien -->
      <ul class="text-sm space-y-1">
        <li id="length"  class="text-red-400">‚Ä¢ Mindestens 8 Zeichen</li>
        <li id="upper"   class="text-red-400">‚Ä¢ Ein Gro√übuchstabe</li>
        <li id="lower"   class="text-red-400">‚Ä¢ Ein Kleinbuchstabe</li>
        <li id="number"  class="text-red-400">‚Ä¢ Eine Zahl</li>
      </ul>

      <select id="role" class="w-full px-4 py-3 rounded bg-black border border-gray-600 text-white">
        <option value="creator">Creator / Model</option>
        <option value="agentur">Agentur</option>
      </select>

      <button
        type="submit"
        class="w-full bg-luxgold text-luxblack font-semibold py-3 rounded hover:bg-yellow-400 transition">
        Registrieren
      </button>

      <p id="msg" class="text-center text-red-400 min-h-[1.25rem] text-sm"></p>
    </form>

    <!-- JS: Client-Logik -->
    <script type="module">
      import { supabase } from '/src/lib/supabase';

      const form = document.getElementById('regForm');
      const msg  = document.getElementById('msg');
      const pass = document.getElementById('pass');
      const passRepeat = document.getElementById('passRepeat');

      const length = document.getElementById('length');
      const upper = document.getElementById('upper');
      const lower = document.getElementById('lower');
      const number = document.getElementById('number');

      // Passwortsichtbarkeit
      document.getElementById('togglePass').addEventListener('click', () => {
        pass.type = pass.type === 'password' ? 'text' : 'password';
      });

      // Live-Validierung
      pass.addEventListener('input', () => {
        const val = pass.value;
        length.classList.toggle('text-green-400', val.length >= 8);
        length.classList.toggle('text-red-400',  val.length < 8);
        upper.classList.toggle('text-green-400', /[A-Z]/.test(val));
        upper.classList.toggle('text-red-400',  !/[A-Z]/.test(val));
        lower.classList.toggle('text-green-400', /[a-z]/.test(val));
        lower.classList.toggle('text-red-400',  !/[a-z]/.test(val));
        number.classList.toggle('text-green-400', /\d/.test(val));
        number.classList.toggle('text-red-400',  !/\d/.test(val));
      });

      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        msg.textContent = '';

        const name  = document.getElementById('name').value.trim();
        const email = document.getElementById('email').value.trim();
        const role  = document.getElementById('role').value;
        const pw    = pass.value.trim();
        const pw2   = passRepeat.value.trim();

        if (pw !== pw2) {
          msg.textContent = 'Passw√∂rter stimmen nicht √ºberein.';
          return;
        }

        // Passwortpr√ºfung
        if (pw.length < 8 || !/[A-Z]/.test(pw) || !/[a-z]/.test(pw) || !/\d/.test(pw)) {
          msg.textContent = 'Passwort erf√ºllt nicht alle Kriterien.';
          return;
        }

        // Supabase-Registrierung
        const { data, error } = await supabase.auth.signUp({ email, password: pw });
        if (error) { msg.textContent = error.message; return; }

        const { error: insertErr } = await supabase
          .from('profiles')
          .insert({ id: data.user.id, name, role });

        if (insertErr) {
          msg.textContent = 'Registrierung ok ‚Äì Profil konnte nicht gespeichert werden.';
          console.error(insertErr);
          return;
        }

        msg.textContent = 'Erfolgreich registriert ‚Äì weiterleiten ‚Ä¶';
        setTimeout(() => (location.href = '/dashboard'), 1000);
      });
    </script>
  </body>
</html>
